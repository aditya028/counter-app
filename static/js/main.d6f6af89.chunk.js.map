{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","className","class","this","getBadgeClass","formatzero","onClick","props","onIncrement","counter","onDecrement","disabled","value","onDelete","id","classes","React","Component","Counters","Fragment","onReset","counters","map","Navbar","href","Apps","state","handleDecrement","index","indexOf","setState","handleReset","obj","handleIncrement","handledelete","counterId","filter","c","totalCounter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.d6f6af89.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Counter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n\r\n      <div className=\"row \">\r\n        <div class=\"col-1\">\r\n          <span className={this.getBadgeClass()}>{this.formatzero()}</span>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)}\r\n            className=\"btn btn-success  m-1\"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDecrement(this.props.counter)}\r\n            className=\"btn btn-primary  m-1\"\r\n            disabled = {this.props.counter.value === 0 ? \"disabled\" : \"\"}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n            className=\"btn btn-danger  m-1\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n  getBadgeClass() {\r\n    let classes = \"badge m-1 bg-\";\r\n    classes += this.props.counter.value === 0 ? \"danger\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatzero() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick = {this.props.onReset} className=\"btn m-1 btn-primary\">Reset</button>\r\n        {this.props.counters.map((counter) => (\r\n          <Counter\r\n            key={counter.id}\r\n            counter = {counter}\r\n            onDecrement = {this.props.onDecrement}\r\n            onIncrement = {this.props.onIncrement}\r\n            onDelete={this.props.onDelete}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Counters;\r\n","import React from \"react\";\r\n\r\nclass Navbar extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav class=\"navbar navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"google.com\">\r\n            Counter-App\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Counters from \"./components/counters\";\r\nimport Navbar from \"./components/navbar\";\r\n\r\nclass Apps extends React.Component {\r\n  state = {\r\n    counters: [\r\n      { id: 1, value: 1 },\r\n      { id: 2, value: 2 },\r\n      { id: 3, value: 3 },\r\n      { id: 4, value: 4 },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar totalCounter={this.state.counters.length} />\r\n        <main className=\"container\">\r\n          <Counters\r\n            counters={this.state.counters}\r\n            onReset={this.handleReset}\r\n            onDecrement={this.handleDecrement}\r\n            onDelete={this.handledelete}\r\n            onIncrement={this.handleIncrement}\r\n          />\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  handleDecrement = (counter) => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index].value = counters[index].value === 0 ? 0 : counters[index].value-1;\r\n    this.setState({ counters });\r\n  };\r\n  handleReset = () => {\r\n    const counters = [...this.state.counters];\r\n    counters.map((obj) => (obj.value = 0));\r\n    this.setState({ counters });\r\n  };\r\n  handleIncrement = (counter) => {\r\n    const counters = [...this.state.counters];\r\n    const index = counters.indexOf(counter);\r\n    counters[index].value++;\r\n    this.setState({ counters });\r\n  };\r\n  handledelete = (counterId) => {\r\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\r\n    this.setState({ counters });\r\n  };\r\n}\r\n\r\nexport default Apps;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Apps from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apps />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}